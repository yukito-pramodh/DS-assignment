#include <stdio.h>
#define MAX 5

int queue[MAX];
int front = -1, rear = -1;

void enqueue(int value) {
    if((rear+1)%MAX == front)
        printf("\nQueue is Full!!");
    else {
        if(front == -1)
            front = 0;
        rear = (rear+1)%MAX;
        queue[rear] = value;
        printf("Inserted -> %d",value);
    }
}

void dequeue() {
    if(front == -1)
        printf("\nQueue is empty");
    else {
        printf("Deleted element -> %d",queue[front]);
        if(front == rear) {
            front = -1;
            rear = -1;
        }
        else
            front = (front+1)%MAX;
    }
}

void find() {
    int i, loc;
    printf("\nEnter the element to find: ");
    scanf("%d",&loc);
    for(i=front; i!=rear; i=(i+1)%MAX) {
        if(queue[i] == loc) {
            printf("\nElement found at location %d",i+1);
            return;
        }
    }
    if(queue[i] == loc)
        printf("\nElement found at location %d",i+1);
    else
        printf("\nElement not found");
}

void display() {
    int i;
    if(front == -1)
        printf("Queue is empty");
    else {
        printf("\nQueue contains \n");
        for(i=front; i!=rear; i=(i+1)%MAX) {
            printf("%d ",queue[i]);
        }
        printf("%d ",queue[i]);
    }
}

int main() {
    int ch;
    while(1) {
        printf("\n1.Enqueue\n2.Dequeue\n3.Find\n4.Display\n5.Exit");
        printf("\nEnter your choice: ");
        scanf("%d",&ch);
        switch(ch) {
            case 1: enqueue(10);
                    break;
            case 2: dequeue();
                    break;
            case 3: find();
                    break;
            case 4: display();
                    break;
            case 5: exit(0);
            default: printf("Invalid choice");
        }
    }
    return 0;
}
